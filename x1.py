# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nRUMMZGUv4bch-l0dR4JkvNEXE5P4krU
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
import argparse


def process_image_with_scribbles(image_bytes, threshold_area=100):
    nparr = np.frombuffer(image_bytes, np.uint8)
    image = cv2.imdecode(nparr, cv2.IMREAD_COLOR)

    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    _, binary = cv2.threshold(gray, 150, 255, cv2.THRESH_BINARY_INV)

    kernel = np.ones((6, 6), np.uint8)
    dilation = cv2.dilate(binary, kernel, iterations=1)

    contours, _ = cv2.findContours(dilation, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    scribble_contours = [c for c in contours if cv2.contourArea(c) > threshold_area]

    for contour in scribble_contours:
        x, y, w, h = cv2.boundingRect(contour)
        cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 3)

    return image